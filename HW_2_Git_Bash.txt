GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON

В веб-интерфейсе сездать новый репозиторий с помощью кнопки "New"
В графе "Repository name" ввести название репозитория "JSON"
Сделать репозиторий публичиным
Поставить галочку в графе "Add a README file"
Нажать на кнопку создания репозитория "Create repository"

 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/Tanyaevm/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
cd JSON
touch new.json

 7. Добавить файл под гит.
git status
git add new.json

 8. Закоммитить файл.
git commit -m "add fille new.json"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате JSON.
vim new.json
i

{
"ФИО":"Евмененко Татьяна Александровна",
"Возраст":"23",
"Количество домашних животных":"нету",
"Будущая желаемая зарплата":"400-500 USD",
}

esc
:wq

 11. Отправить изменения на внешний репозиторий.
git add new.json
git commit -m "add new"
git push

 12. Создать файл preferences.json
touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, 
страна которую хотели бы посетить) в формате JSON.
vim preferences.json
i

{
"Любимый фильм":"Вечное сияние чистого разума",
"Любимый сериал":"Бумажный дом",
"Любимая еда":"Паста в сметаном соусе",
"Любимое время года":"Лето",
"Страна, которую хотели бы посетить":"Италия"
}

esc
:wq

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены 
на курсе в формате JSON
touch sklls.json
vim sklls.json
i

{
"Теория":"Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.",
"Инструменты тестирования":
[
    "Postman",
	"Git",
	"Charles",
	"Jmeter",
	"Android Studio"
],
"Основы SQL":
[
    "Create", 
    "Delete", 
	"Drop", 
	"Insert Into", 
	"Select", 
	"From", 
	"Where","Join"
],

"Язык программирования":"Python"
}

esc
:wq

 15. Отправить сразу 2 файла на внешний репозиторий.
git status
git commit -am "add new file"
fit push

 16. На веб интерфейсе создать файл bug_report.json.
Нажать на кнопку создания нового файла "Add file"
Выбрать "Create new file"
Ввести название файла bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ввести текст комментария
Нажать на нопку "Commit new file"

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт
в формате JSON.
Открыть файл bug_report.json
Нажать на кнопку "Edit thas file" (в форме карандаша)
{
"Название":"Не работает кнопка добавления товара в корзину",
"Шаги по воспроизведению":{
        "1":"Открыть сайт",
        "2":"Зайди в раздел с товаром",
        "3":"Открыть товар",
        "4":"Нажать на 'Добавить товар в корзину'"
},
"Фактический результат":"Товар не добавляется в корзину",
"Ожидаемый результат":"Товар добавлен в корзину"
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ввести текст комментария
Нажать на нопку "Commit new file"

 20. Синхронизировать внешний и локальный репозиторий JSON
git fetch
git pull


XML
 21. Создать внешний репозиторий c названием XML.
В веб-интерфейсе сездать новый репозиторий с помощью кнопки "New"
В графе "Repository name" ввести название репозитория "XML"
Сделать репозиторий публичиным
Поставить галочку в графе "Add a README file"
Нажать на кнопку создания репозитория "Create repository"

 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/Tanyaevm/XML.git

 23. Внутри локального XML создать файл “new.xml”.
cd XML
touch new.xml

 24. Добавить файл под гит.
git status
git add new.xml

 25. Закоммитить файл.
git commit -m "add new xml"

 26. Отправить файл на внешний GitHub репозиторий.
git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате XML.
vim new.xml
i

<?xml version="1.0" encoding="UTF-8" ?>
<Person>
<ФИО>Евмененко Татьяна Александровна</ФИО>
<Возраст>23 года</Возраст>
<Домашние_животные>Нету</Домашние_животные>
<Будущая_желаемая_зарплата>400-500 USD</Будущая_желаемая_зарплата>
</Person>

esc
:wq

 28. Отправить изменения на внешний репозиторий.
git status
git commit -am "add new"

 29. Создать файл preferences.xml
touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, 
сторона которую хотели бы посетить) в формате XML.
vim preferences.xml
i

<?xml version="1.0" encoding="UTF-8" ?>
<preferences>
<Любимый_фильм>Вечное сияние чистого разума</Любимый_фильм>
<Любимый_сериал>Бумажный дом</Любимый_сериал>
<Любимая_еда>Паста в сметаном соусе</Любимая_еда>
<Любимое_время_года>Лето</Любимое_время_года>
<Страна_которую_хотели_бы_посетить>Италия</Страна_которую_хотели_бы_посетить>
</preferences>

esc
:wq

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на 
курсе в формате XML
vim sklls.xml
i

<?xml version="1.0" encoding="UTF-8" ?>
<QA>
<Теория>Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.</Теория>
<Инструменты_тестирования>Postman, Git, Charles, Jmeter, Android Studio</Инструменты_тестирования>
<Основы_SQL>Create, Delete, Drop, Insert Into, Select, From, Where, Join</Основы_SQL>
<Язык_программирования>Python</Язык_программирования>
</QA>

esc
:wq

 32. Сделать коммит в одну строку.
git status
git add .
git commit -m "2 new file"

 33. Отправить сразу 2 файла на внешний репозиторий.
git push

 34. На веб интерфейсе создать файл bug_report.xml.
Выбрать "Create new file"
Ввести название файла bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ввести текст комментария
Нажать на нопку "Commit new file"

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг 
репорт в формате XML.
Открыть файл bug_report.xml
Нажать на кнопку "Edit thas file" (в форме карандаша)

<?xml version="1.0" encoding="UTF-8" ?>
<Баг_репорт>
<Название>Не работает кнопка добавления товара в корзину</Название>
<Шаги_по_воспроизведению> 1. Открыть сайт,
        2. Зайди в раздел с товаром,
        3. Открыть товар,
        4. Нажать на 'Добавить товар в корзину.</Шаги_по_воспроизведению>
<Фактический_результат>Create, Delete, Drop, Insert Into, Select, From, Where, Join</Фактический_результат>
<Ожидаемый_результат>Python</Ожидаемый_результат>
</Баг_репорт>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ввести текст комментария
Нажать на нопку "Commit new file"

 38. Синхронизировать внешний и локальный репозиторий XML.
git fetch
git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
В веб-интерфейсе сездать новый репозиторий с помощью кнопки "New"
В графе "Repository name" ввести название репозитория "TXT"
Сделать репозиторий публичиным
Поставить галочку в графе "Add a README file"
Нажать на кнопку создания репозитория "Create repository"

 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/Tanyaevm/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
touch new.txt

 4. Добавить файл под гит.
git status
git add new.txt

 5. Закоммитить файл.
git commit -m "new file"

 6. Отправить файл на внешний GitHub репозиторий.
git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате TXT.
vim new.txt
i

ФИО - Евмененко Татьяна Александровна
Возраст - 23
Количество домашних животных - нету
Будущая желаемая зарплата - 400-500 USD

esc
:wq

 8. Отправить изменения на внешний репозиторий.
git add new.txt
git commit -m "add new"
git push

 9. Создать файл preferences.txt
touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона 
которую хотели бы посетить) в формате TXT.
vim new.txt
i

Любимый фильм - Вечное сияние чистого разума
Любимый сериал - Бумажный дом
Любимая еда - Паста в сметаном соусе
Любимое время года - Лето
Страна, которую хотели бы посетить - Италия

esc
:wq
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут 
изучены на курсе в формате TXT
vim sklls.txt
i

Теория - Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.
Инструменты тестирования - Postman, Git, Charles, Jmeter, Android Studio
Основы SQL - Create, Delete, Drop, Insert Into, Select, From, Where, Join,
Язык программирования - Python

esc
:wq

 12. Сделать коммит в одну строку.
git status
git add .
git commit -am "new files"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.txt.
Нажать на кнопку создания нового файла "Add file"
Выбрать "Create new file"
Ввести название файла bug_report.txt

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ввести текст комментария
Нажать на нопку "Commit new file"

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг 
репорт в формате TXT.
Открыть файл bug_report.txt
Нажать на кнопку "Edit thas file" (в форме карандаша)

Название - Не работает кнопка добавления товара в корзину.
Шаги по воспроизведению:
        1. Открыть сайт,
        2. Зайди в раздел с товаром,
        3. Открыть товар,
        4. Нажать на 'Добавить товар в корзину.
Фактический результат - Товар не добавляется в корзину.
Ожидаемый результат - Товар добавлен в корзину.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ввести текст комментария
Нажать на нопку "Commit new file"

 18. Синхронизировать внешний и локальный репозиторий TXT
git fetch
git pull